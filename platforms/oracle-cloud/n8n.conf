server {
    server_name n8n.yourdomain.com; # THIS MUST MATCH YOUR DOMAIN EXACTLY

    # This block is for Certbot's challenge.
    # It's crucial for the Let's Encrypt validation.
    location /.well-known/acme-challenge/ {
        root /var/www/html; # Certbot will create files here. Ensure /var/www/html exists and Nginx can read/write to it (as done in step 2).
        allow all; # Ensure no restrictions
    }

    # This 'location /' block will handle all other HTTP traffic.
    # For now, let's make it simple to ensure Nginx is responding.
    location / {
        # Option A: Temporarily serve a basic HTML page (recommended for getting Certbot to work)
        # root /var/www/html;
        # index index.html index.htm;
        # try_files $uri $uri/ =404; # Basic file serving

        # Option B: (If n8n is ALREADY running perfectly and you know it's exposed on localhost:5678)
        # Comment out Option A above if using this.
        proxy_pass http://localhost:5678;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_buffering off;
    }

    listen 443 ssl http2; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/n8n.yourdomain.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/n8n.yourdomain.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

# IMPORTANT: Ensure there is NO 'server' block listening on port 443 (HTTPS) in this file,
# or anywhere else in your Nginx configuration, for 'n8n.yourdomain.com' right now.
# Certbot will create it AFTER it gets the certificate.
server {
    if ($host = n8n.yourdomain.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    server_name n8n.yourdomain.com;
    return 404; # managed by Certbot
}